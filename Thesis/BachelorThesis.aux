\relax 
\@writefile{toc}{\contentsline {section}{\numberline {0.1}Abstract}{1}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The developer describes the steps in researching and developing a Thunderbird Add-on that offers E2EE, without the need for key changes, i.e. without PGP. The developed software will allow one user to exchange a keyword/password with another user, encipher a message with that keyword/password, and the other user will be able to decipher to message with that password.}{1}{}\protected@file@percent }
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction}{4}{}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {paragraph}{The digital age has fully absorbed our societies. We do everything in some form or another on digital media: create art, science, communicate, create and share memories, play games, and write thesis reports with our computers. There is basically no limit to what people do with their computers.}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Proportional to this growth, the internet's influence on our lives has also ballooned. Our activities have been pushed more and more online, and onto "the cloud." Originally, few bothered to think about privacy. Most damaging, perhaps, was the erroneous expectation of private communication. Edward Snowden's revelations about the "Five Eyes" intelligence alliance, between the United States, the United Kingdom, Canada, Australia, and New Zealand and their the collection of all online communication, social media, and phone data removed any doubt about expectations to individual privacy. No online communication, or online activities in general, has been considered safe ever since.}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Background}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The the sphere of email communication, PGP has existed for decades. It is predicated on the exchange of user created public (and private) keys. However, it has a few inherent problems. First, there is a technical requirement to create and exchange keys. In order to facilitate this, additional client software must be installed. Additionally, several challenging steps beyond the scope of the average end user will need to be completed, like selecting encryption algorithm, size of key, etcetra. Originally, Thunderbird relied on an add-on, Enigmail, to create, manage, and exchange keys. The author used this add-on for many years. And, while it was satisfactory, it was plain to see that it was not without it's technical requirements.}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Starting with Thunderbird 78, Mozilla implemented OpenPGP as part of it's core client software, and dropped support for all add-ons not using MailExtensions (which includes Enigmail). However, the feature is disabled by default, and is still considered a work in progress. All other add-ons found on Thunderbird's extensions page or searching through Github were considered to be in a testing or experimental phase.}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Problem}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Mozilla has tried to support end-to-end encryption (E2EE) for a long time, it has been faced with a major obstacles, mostly mentioned above, including:}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Thus, the problem: How can Alice send an encrypted email to someone that does not have any type of public key available?}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Solution}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The bachelor thesis candidate intends to research and develop a Thunderbird Add-on, that will allow Alice to send an encrypted message to Bob. Bob is not a tech savvy person, and is clueless about encryption technology. So, the idea of learning, installing, and setting up any types of keys, for him, is overwhelming. However, they do communicate regularly, so Alice can just whisper a one time password to him. Subsequently, Alice could then use developed add-on to encipher an email message for Bob. Which, he then could decipher using the same add-on, and the analog agreed upon passphrase.}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{More specifically, it will focus on the Mozilla Thunderbird client, for the simple fact that I have personally used it for over ten years, it's free, open-source, and cross platform. While I grant that not everyone uses Thunderbird, at least there should be no shortage of users, and theoretically anyone can get it easily, for free.}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Ultimately, this project aims to offer a simple, albeit \emph  {not} perfect solution for those interested in privacy, that don't have the technical expertise to engage in key creation, exchanges or have zero knowledge about encryption. The author will demonstrate the advantages and disadvantages of various implementations strategies, and implement a solution that offers, hopefully, a viable encryption option that will fulfill some use cases.}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Research will dictate the best implementation strategy.}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.4}Methods applied}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The methods and tools used to solve this research inquiry will include:}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{After the research has been completed, all coding will proceed using a test driven development approach. Thunderbird add-ons are based on MailExtension technology, which are created using the follow standard languages:}{6}{}\protected@file@percent }
\citation{Shirey}
\citation{DelfsKnebl}
\citation{Schneier}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Cryptography}{7}{}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Algorithm selection overview}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}Symmetric key encryption}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Selecting an algorithm, among so many, was pretty straightforward given my use case, but I wanted to show my thought processes. Firstly, there are two fundamental paths for selecting an encryption algorithm. The selection between \emph  {asymmetric} and \emph  {symmetric} key encryption is the initial decision.}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The goal of this project is \emph  {ease of use} (at the cost of security), so our choice is clear: symmetric-key encryption.}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}Block vs. Stream cipher encryption}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Next, we need to decide between a block cipher or a stream cipher. As Bruce Schneier defines the two in his book "Applied Cryptography: Protocols, Algorithms in C" as:}{7}{}\protected@file@percent }
\citation{Schneier}
\citation{Nirula}
\@writefile{toc}{\contentsline {paragraph}{The advantages of a stream ciphers:}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{are more appropriate for hardware implementations.}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{According to Bruce Schneier, block ciphers are more suitable for software implementation as they are easier to implement, avoid time-consuming bit manipulations, and operate on computer sized blocks.}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{A bit of a spoiler, there is no longer strict "block vs. stream" cipher schemas. We'll explain shortly, but for now, we'll accept that we'll be implementing a block cipher.}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.3}Block cipher selection}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{There are many block ciphers to choose from, these are just some of the most popular:}{8}{}\protected@file@percent }
\citation{Aumasson}
\citation{PaarPelzl}
\citation{PaarPelzl}
\@writefile{toc}{\contentsline {paragraph}{But, after an overall account of the block enciphers available, the author decided there is really only one choice: the Advanced Encryption Standard (AES) as it's the industry standard.}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Advanced Encryption Standard (AES)}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{For reasons that will soon become apparent, AES has been the industry standard for the past 20 years, even used as a secure standard by the U.S. government.}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Mathematics: Overview}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Since a full background is beyond the scope of this project (it could entail it's own thesis), the author will gloss over it quickly.}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The foundation of AES is grounded in Abstract mathematics, more specifically, \emph  {set theory}. Within set theory exists the study of groups. A group is a set of elements upon which an operation (and its inverse) can be executed.}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{In short,}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{are operations that can be applied to a group of elements.}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{A field is an extension of a group, in that all four basic arithmetic operations are included in a single structure.}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{However, as cryptographers, we are not yet satisfied. We need a working set that is finite, or as they are commonly known \emph  {Galois fields}, or \emph  {unendliche Körpe}. In short, the beauty of the Galois fields is that regardless of the four principle operations performed on them, the result will remain \emph  {within} the set of elements. This is profound, necessary and brilliant for cryptographic usage. But, how does this work?}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Essentially, the above operations are carried out with the aid of the \emph  {modulo operator}, and it ensures our result remains in the set. But, what set?}{9}{}\protected@file@percent }
\citation{DelfsKnebl}
\citation{Crawford}
\citation{Katz}
\citation{Katz}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces  Simplified AES Overview\relax }}{10}{}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig: AESovereview}{{2.1}{10}}
\@writefile{toc}{\contentsline {paragraph}{We extend beyond a finite field, to focus on a extension field, in particular:}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{This conveniently translates to 256 elements, which fits perfectly within a computer byte.}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The last thing we will want to have in mind as we proceed is polynomial division. It's not any different than grammar school algebra, but is carried out with one of a very special type of polynomial, known as a \emph  {irreducible polynomial}. An irreducible polynomial is similar to a prime number, only it is a polynomial. In other words, it cannot be broken down, divided down, into smaller components. For our cryptographic purposes, the polynomial we'll use is the following: $x^8 + x^4 + x^3 + x + 1$}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}The AES algorithm}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{With the mathemathical theories out of the way, we can look at how all the theory get implemented into our computer. Here is a simplifed overview: (See reference image: 2.1\hbox {}).}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The first step in the AES algorithm is the creation of a 4-by-4 array of bytes called the state, that is modified in a series of rounds. The state is initially set equal to the input of the cipher (notice: a 128 bit--minimum--is exactly 16 bytes, perfect for execution on a computer). Then, the following for operations are applies.}{10}{}\protected@file@percent }
\citation{Crawford}
\citation{Katz}
\citation{Crawford}
\citation{Katz}
\citation{Crawford}
\citation{Katz}
\citation{Crawford}
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces  AddRound Key Round\relax }}{11}{}\protected@file@percent }
\newlabel{fig: AddRoundKey}{{2.2}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}Step One: Adding the key.}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{In every round of the AES, a 128-bit sub-key is derived from the master key, and it is interpreted as a 4-by-4 array of bytes. The state array is updated by XORing it with the sub-key (See reference image: 2.2\hbox {}).}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.4}"SubBytes" or byte substitution}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{In this step, each byte of the state array is replaced by another byte according to a single fixed table S. This substitution table (or S-box) is a bijection over $\{0,1\}^8$. There is only one S-box that is substituting all the bytes in the state array, every round (See image: 2.3\hbox {}).}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.5}ShiftRows or the rows are shifted}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{In this step, the bytes in each row of the state array are cyclically shifted to the left as follows: the first row of the array is untouched, and the second row is shifte one place to the left, the third row is shifted two places to the left, and the fourth row is shifted three places to the left (See reference image: 2.4\hbox {}).}{11}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces  SubBytes Round\relax }}{12}{}\protected@file@percent }
\newlabel{fig: SubBytes}{{2.3}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.4}{\ignorespaces  ShiftRows Round\relax }}{12}{}\protected@file@percent }
\newlabel{fig: ShiftRows}{{2.4}{12}}
\citation{Dooley}
\@writefile{lof}{\contentsline {figure}{\numberline {2.5}{\ignorespaces  MixColumns Round\relax }}{13}{}\protected@file@percent }
\newlabel{fig: MixColumns}{{2.5}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.6}MixColums or the columns are mixed}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{In this step, an invertible linear transformation is applied to each column. One can think of this as a matrix multiplication (See reference image: 2.5\hbox {}).}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.7}The process is repeated x number of times.}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The AES algorithm supports bit sizes of 128 (minimum requirement), 192, and 256. Depending on the bit size specified, the algorithm will be repeated either 10, 12, or 14 times.}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.8}AES algorithm summary}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The goal of the algorithm is to insert confusion and diffusion into the field, over and over. And, the algorithm is just reversed to retrieve the plain text. The algorithm was fast in 2001, when it was introduced, but now, 20 years later, it is built into all modern desktop CPUs (at least Intel and AMD), so it's blazingly fast.}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Although the algorithm is derived from a combination of complex mathematical theories, it's algorithmic implementation into hardware is the perfect intersection between mathematics and computer science. Any computer scientist can quickly assess from the images above, that the XORing, bit shifting, table lookups, and bit permutations are exactly the kind of operations that are executed super fast on computers.}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Implementation}{14}{}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}WebExtensions}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Write a blah blah paragraph, can be short, about the basic structure of WebExtension. The following are Manifest Keys that will be required for my implementation.}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{In Thunderbird, all WebExtension API can be accessed through the browser.* namespace, as with Firefox, but also through the messenger.* namespace, which is a better fit for Thunderbird.}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{messenger.tabs.query}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subparagraph}{The tabs API provides access to Thunderbird's tabs. In some cases, since the call is executed from where it is called from, it may be necessary to execute tabs \emph  {message\_display\_action} and not from inside the tab we are looking for.}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{messenger.messageDisplay.getDisplayedMessage()}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subparagraph}{the \emph  {getDisplayedMessage} method of the \emph  {messageDisplay API} provides access to the currently viewed message in a given tab. It returns a promise for a \emph  {MessageHeader} object from the \emph  {message API} with basic imformation about the message.}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{messenger.messages.getFull()}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subparagraph}{The \emph  {getFull()} method returns a Promise for a MessagePart object, which relates to messages containing multiple MIME parts. The headers member of the part returned by getFull includes the headers of the message.}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Steps to create an addon in Thunderbird.}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.1}Using a background page}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{First, we need to add "backgrounds" to our manifest.}{15}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Additionally, we'll need an html and javascript document, as well as keep the manifest updated.}{15}{}\protected@file@percent }
\citation{SJCL}
\@writefile{toc}{\contentsline {paragraph}{The Add-on should be fully functional now.}{16}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Javascript Cryptography}{16}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Originally, the researcher was not sure how best to implement cryptography within a Thunderbird add-on. Implementing my own javascript AES algorithm, while ideal, was not realistic--or adviceable--with the time constraints of this thesis. Thus, the issue would be finding an existing library or API that had done the javascript cryptographic implementations.}{16}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{For this task, there were three necessary conditions:}{16}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{and, slightly less important, actively maintained.}{16}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Meeting the above criteria was not as simple as it would seem. There were many options that met some of the conditions, but meeting them all was more challenging. Ultimately, however, the researcher was satified with the Stanford Javascript Crypto Library (SJCL).}{16}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces  Example of linking SJCL in HTML\relax }}{17}{}\protected@file@percent }
\newlabel{fig: exampleSJCL_html}{{3.1}{17}}
\@writefile{toc}{\contentsline {paragraph}{The usage is pretty straight forward, and will work for this implementation. Simply linking the javascript source in the html file (See reference figure: 3.1\hbox {}).:}{17}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces  Example of javascript SJCL\relax }}{17}{}\protected@file@percent }
\newlabel{fig: exampleSJCL_js}{{3.2}{17}}
\@writefile{toc}{\contentsline {paragraph}{and, the javascript can simply be used as follows (See reference figure: 3.2\hbox {}):}{17}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces  Example output to Firefox console\relax }}{17}{}\protected@file@percent }
\newlabel{fig: exampleSJCL}{{3.3}{17}}
\@writefile{toc}{\contentsline {paragraph}{giving the following result (See reference figure: 3.3\hbox {}):}{17}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The usage is pretty straight forward, and will meet our needs.}{17}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3.3}Implementation Details}{17}{}\protected@file@percent }
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Challenges Encountered}{18}{}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Open-source community}{18}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4.2}Live development environment}{18}{}\protected@file@percent }
\@writefile{toc}{\contentsline {chapter}{\numberline {5}Summary}{19}{}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}Retrospective}{19}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{In an ideal situation, I would have liked to to implemented "an HTW AES javascript crypto suite." However, the author was lacking to conditions. One, a team of likely three students would have been required to carry out the project in the required timeframe. The documentation, development, and testing of such a system would have required a great deal of teamwork.}{19}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Secondly, the students working as a team would have had to work together in the past, be known to each other, and have a nice blend of talents, motivations, and personalities for it to work efficiently.}{19}{}\protected@file@percent }
\@writefile{toc}{\contentsline {chapter}{\numberline {6}Software Requirments Specifications}{20}{}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {6.1}Introduction}{20}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.1}Purpose}{20}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{This document will describe the entire software development process, including use cases, personas, diagrams, and the end goals of the system. The audience for this document will be any persons interested in the software engineering process used for this project, but more specifically, those responsible for overseeing and rating this project.}{20}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.2}Scope}{20}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The name for this product will be "Thunderbird: One Time Password." This product will be a Thunderbird add-on, that will encipher plain text into cipher text, which will be delivered by the Thunderbird client to another Thunderbird recipient, that also has the add-on installed. Finally, the second person will be able to decipher the cipher text back to plain text, and read the message.}{20}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.3}Definitions, acronyms, abbreviations}{20}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The following definitions, acronyms, and abbreviations may be used with in the software development process:}{20}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.4}References}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Author used the IEEE document:}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{the IEEE Recommended Practice for Software Requirements Specifications.}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.5}Overview}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {6.2}Overall Description}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The following subsections will describe the general factors that will influence the product requirements, including any background information.}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.1}Product perspective}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The developed software product, \emph  {Thunderbird: One Time Password}, has not current rival. It current alternatives would be Mozilla's own implementation of OpenPGP. The previous option was PgP through the add-on Enigmail. However, at the writing of this document, the add-on is no longer supported.}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The two alternatives do have the advantage that they used symmetric key exchange to encrypt emails, which is more secure, and recommended for encoded email exchange. The \emph  {Thunderbird: One Time Password} add-on will have the feature that it is easy to use, at the expense of security.}{21}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{System interfaces}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The required, and assumed interfaces required for the product include the following:}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{User interfaces}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{There are no special user interface requirements.}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Hardware interfaces}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{There are no special hardware interfaces required for this product to function.}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Software interfaces}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{The required software interfaces are:}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Communications interfaces}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{No special communication interfaces will be required, than would already be prerequisites for Email communication, i.e. network capable computer.}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Memory constraints}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Not applicable}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Operations}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Not applicable}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{Site adaptation requirements}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Not applicable}{22}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.2}Product functions}{23}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.3}User characteristics}{23}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.4}Constraints}{23}{}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{There will be various constraints within this project listed below:}{23}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.5}Assumptions and dependencies}{23}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {6.3}Specific Requirements}{23}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {6.4}Appendix}{23}{}\protected@file@percent }
\bibcite{Shirey}{Shirey, 2007}
\bibcite{DelfsKnebl}{Delfs and Knebl, 2002}
\bibcite{Schneier}{Schneier, 2015}
\bibcite{Nirula}{Nirula, 2022}
\bibcite{Aumasson}{Aumasson, 2017}
\bibcite{PaarPelzl}{Paar \& Pelzl, 2009}
\bibcite{Dooley}{Dooley, 2008}
\bibcite{Katz}{Katz \& Lindell, 2007}
\bibcite{book10}{Martin, 2017}
\bibcite{Crawford}{Crawford, 2019}
\bibcite{SJCL}{Stanford Security Lab, 2009}
\gdef\minted@oldcachelist{,
  default.pygstyle,
  0ADDBF72F40357D9AC8EB40269F002016F68EB9A7943C374622114467734D81C.pygtex,
  0ADDBF72F40357D9AC8EB40269F002016F68EB9A7943C374622114467734D81C.pygtex,
  C55D7F58A22D22709BA1601383089F11610F5E44995EFBCEA4AD36CA5FDC4BAE.pygtex,
  32F8973278F2EB344A1202091F503C2F610F5E44995EFBCEA4AD36CA5FDC4BAE.pygtex,
  08D6F6E83E106EDE01FF3B02B7ED7D986F68EB9A7943C374622114467734D81C.pygtex}
\@writefile{toc}{\contentsline {chapter}{References}{24}{}\protected@file@percent }
\gdef \@abspage@last{25}
